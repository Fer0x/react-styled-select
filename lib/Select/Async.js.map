{"version":3,"sources":["../../src/Select/Async.js"],"names":["loadOptions","props","options","_callback","setState","isLoading","then","state","cloneElement","children","Object","assign","onTyping","PureComponent","propTypes","autoload","bool","isRequired","ignoreAccents","ignoreCase","func","defaultProps"],"mappings":"8tCAIE,aAAmB,uFASnBA,WATmB,CASL,WAAU,OACE,EAAKC,KADP,CACdD,WADc,CAGhB,EAAW,aAAiB,CAChC,GAAM,GAAU,GAAQ,EAAKE,OAAb,EAAwB,EAAxC,CACI,IAAa,EAAKC,SAFU,GAGlC,EAAKA,SAAL,CAAiB,IAHiB,CAIlC,EAAKC,QAAL,CAAc,CACbC,YADa,CAEbH,SAFa,CAAd,CAJkC,CASjC,CAZqB,CActB,EAAKC,SAAL,EAdsB,CAgBtB,GAAM,GAAU,MAAhB,CAhBsB,GAmBvB,EAAQG,IAAR,CACC,kBAAU,GAAS,IAAT,GAAV,CADD,CAEC,kBAAW,KAAX,CAFD,CAnBuB,CAyBnB,EAAKH,SAAL,EAAkB,CAAC,EAAKI,KAAL,CAAWF,SAzBX,EA0BvB,EAAKD,QAAL,CAAc,CACbC,YADa,CAAd,CAIA,CAvCkB,CAGjB,EAAKE,KAAL,CAAa,CACXF,YADW,CAEXH,QAAS,EAAMA,OAFJ,CAHI,EAOlB,C,iDAkCQ,CACP,MAAO,WAAMM,YAAN,CAAmB,KAAKP,KAAL,CAAWQ,QAA9B,CAAwCC,OAAOC,MAAP,CAAc,EAAd,CAAkB,KAAKV,KAAvB,CAA8B,CAC3EC,QAAS,KAAKK,KAAL,CAAWL,OADuD,CAE3EU,SAAU,KAAKZ,WAF4D,CAA9B,CAAxC,CAIR,C,OA/CuB,UAAMa,a,EAkDhC,EAAYC,SAAZ,CAAwB,CACtBC,SAAU,UAAUC,IAAV,CAAeC,UADH,CAEtBC,cAAe,UAAUF,IAFH,CAGtBG,WAAY,UAAUH,IAHA,CAItBhB,YAAa,UAAUoB,IAAV,CAAeH,UAJN,C,CAOxB,EAAYI,YAAZ,CAA2B,CACzBrB,YAAa,UAAM,CAAE,CADI,C","file":"Async.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass SelectAsync extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLoading: false,\n      options: props.options\n    }\n  }\n\n  loadOptions = (term) => {\n    const { loadOptions } = this.props\n\n    const callback = (error, data) => {\n      const options = data && data.options || [];\n      if (callback === this._callback) {\n\t\t\t\tthis._callback = null;\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\toptions\n\t\t\t\t});\n\t\t\t}\n    }\n\n    this._callback = callback\n\n    const promise = loadOptions(term, callback);\n\n    if (promise) {\n\t\t\tpromise.then(\n\t\t\t\t(data) => callback(null, data),\n\t\t\t\t(error) => callback(error)\n\t\t\t);\n\t\t}\n\n\t\tif ( this._callback && !this.state.isLoading ) {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t});\n\t\t}\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, Object.assign({}, this.props, {\n      options: this.state.options,\n      onTyping: this.loadOptions\n    }))\n  }\n}\n\nSelectAsync.propTypes = {\n  autoload: PropTypes.bool.isRequired,\n  ignoreAccents: PropTypes.bool,\n  ignoreCase: PropTypes.bool,\n  loadOptions: PropTypes.func.isRequired\n}\n\nSelectAsync.defaultProps = {\n  loadOptions: () => {}\n}\n\nexport default SelectAsync\n"]}