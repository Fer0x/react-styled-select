{"version":3,"sources":["../../src/Select/Select.js"],"names":["WrapperSelect","props","onClearValue","event","preventDefault","stopPropagation","resetField","onSelectValue","newValue","value","state","label","optionsMap","setState","valueLabel","searchTerm","inputInnerRef","onChange","closeOptions","onValueClick","onSelectFocused","openOptions","isFocused","setFocus","onSearching","focusedIndex","options","isOpened","typing","filteredOptions","filter","opt","toLowerCase","term","indexOf","lastIndex","length","keyCode","setTimeout","reduce","agregate","current","hasOwnProperty","isSelected","v4","onClose","focus","target","tagName","onInputClear","placeholder","searchable","classes","valueRenderer","content","selectValue","selectValueLabel","selectPlaceholder","selectMultiValueWrapper","selectInput","selectInputField","n","onOpen","noResultsText","optionRenderer","selectOptions","map","i","Object","assign","key","id","className","selectOption","tabIndex","onMouseOver","e","dataKey","getAttribute","onMouseOut","console","log","onMouseDown","selectMenuOuter","selectMenu","clearable","selectClearZone","selectClear","generatedClassName","selectNode","name","disabled","node","selectInnerRef","selectControl","renderSelectMultiValueWrapper","renderSelectClearZone","selectArrowZone","selectArrow","renderSelectMenuOuter","PureComponent","propTypes","any","array","func","bool","string","object","oneOfType","element","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAkCMA,a;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAAA,YAgEnBC,YAhEmB,GAgEJ,UAACC,KAAD,EAAW;AACxBA,cAAMC,cAAN;AACAD,cAAME,eAAN;AACA,cAAKC,UAAL;AACD,OApEkB;;AAAA,YAsEnBC,aAtEmB,GAsEH,UAACC,QAAD,EAAWL,KAAX,EAAqB;AAAA,YAC3BM,KAD2B,GACjB,MAAKC,KADY,CAC3BD,KAD2B;;AAEnC,YAAME,QAAQ,MAAKC,UAAL,CAAgBJ,QAAhB,EAA0BG,KAAxC;AACA,YAAIF,SAASD,QAAb,EAAuB;AACrB,gBAAKK,QAAL,CAAc;AACZJ,mBAAOD,QADK;AAEZM,wBAAYH,KAFA;AAGZI,wBAAY;AAHA,WAAd,EAIG,YAAM;AACP,kBAAKC,aAAL,CAAmBP,KAAnB,GAA2B,EAA3B;AACA,kBAAKR,KAAL,CAAWgB,QAAX,CAAoBT,QAApB;AACD,WAPD;AAQD;AACD,cAAKU,YAAL;AACA,cAAKjB,KAAL,CAAWkB,YAAX,CAAwBX,QAAxB,EAAkCL,KAAlC;AACD,OArFkB;;AAAA,YAuFnBiB,eAvFmB,GAuFD,YAAM;AACtB,cAAKC,WAAL;AACA,cAAKR,QAAL,CAAc;AACZS,qBAAW;AADC,SAAd;AAGA,cAAKC,QAAL;AACD,OA7FkB;;AAAA,YA+FnBC,WA/FmB,GA+FL,UAACrB,KAAD,EAAW;AAAA,0BACqB,MAAKO,KAD1B;AAAA,YACfe,YADe,eACfA,YADe;AAAA,YACDC,OADC,eACDA,OADC;AAAA,YACQC,QADR,eACQA,QADR;;;AAGvB,YAAMC,SAAS,SAATA,MAAS,GAAM;AACnB,cAAMC,kBAAkB,MAAK5B,KAAL,CAAWyB,OAAX,CAAmBI,MAAnB,CAA0B,UAACC,GAAD,EAAS;AACzD,gBAAMpB,QAAQoB,IAAIpB,KAAJ,CAAUqB,WAAV,EAAd;AACA,gBAAMC,OAAO,MAAKjB,aAAL,CAAmBP,KAAnB,CAAyBuB,WAAzB,EAAb;AACA,mBAAOrB,MAAMuB,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAAhC;AACD,WAJuB,CAAxB;;AAMA,gBAAKpB,QAAL,CAAc;AACZE,wBAAY,MAAKC,aAAL,CAAmBP,KADnB;AAEZiB,qBAASG,eAFG;AAGZF,sBAAU;AAHE,WAAd;AAKD,SAZD;;AAcA,YAAMQ,YAAaT,QAAQU,MAAR,GAAiB,CAApC;AACA,gBAAQjC,MAAMkC,OAAd;AACE;AAAoB;AAClB,gBAAI,CAAC,MAAKrB,aAAL,CAAmBP,KAAxB,EAA+B;AAC7B,oBAAKH,UAAL;AACA;AACD;AACDgC,uBAAWV,MAAX,EAAmB,CAAnB;AACA;AACF;AACE,kBAAKf,QAAL,CAAc;AACZY,4BAAeA,gBAAgB,CAAhB,GAAoBU,SAApB,GAAiCV,eAAe;AADnD,aAAd;AAGA;AACF;AACE,gBAAI,CAACE,QAAL,EAAe;AACb,oBAAKN,WAAL;AACA;AACD;AACD,kBAAKR,QAAL,CAAc;AACZY,4BAAeA,gBAAgBU,SAAhB,GAA4B,CAA5B,GAAiCV,eAAe;AADnD,aAAd;AAGA;AACF;AACE,gBAAI,CAACC,QAAQU,MAAb,EAAqB;AACrB,gBAAM5B,WAAWkB,QAAQD,YAAR,EAAsBhB,KAAvC;AACA,kBAAKF,aAAL,CAAmBC,QAAnB,EAA6BL,KAA7B;AACA;AACF;AACE,kBAAKe,YAAL;AACA;AACF;AACEoB,uBAAWV,MAAX,EAAmB,CAAnB;AA/BJ;AAiCD,OAlJkB;;AAGjB,YAAKhB,UAAL,GAAkBX,MAAMyB,OAAN,CAAca,MAAd,CAAqB,UAACC,QAAD,EAAWC,OAAX,EAAuB;AAC5DD,iBAASC,QAAQhC,KAAjB,IAA0BgC,OAA1B;AACA,eAAOD,QAAP;AACD,OAHiB,EAGf,EAHe,CAAlB;;AAKA,UAAI1B,aAAa,IAAjB;AACA,UAAIb,MAAMQ,KAAN,IAAe,MAAKG,UAAL,CAAgB8B,cAAhB,CAA+BzC,MAAMQ,KAArC,CAAnB,EAAgE;AAC9DK,qBAAa,MAAKF,UAAL,CAAgBX,MAAMQ,KAAtB,EAA6BE,KAA1C;AACD;;AAED,YAAKD,KAAL,GAAa;AACXiB,kBAAU,KADC;AAEXL,mBAAW,KAFA;AAGXqB,oBAAY,KAHD;AAIXlC,eAAOR,MAAMQ,KAJF;AAKXK,8BALW;AAMXC,oBAAY,IAND;AAOXU,sBAAc,CAPH;AAQXC,iBAASzB,MAAMyB,OARJ;AASX,qBAAa,MAAKzB,KAAL,CAAW,WAAX,KAA2B,eAAK2C,EAAL;AAT7B,OAAb;;AAYA,YAAK5B,aAAL,GAAqB,IAArB;AAzBiB;AA0BlB;;;;oCAEa;AACZ,aAAKH,QAAL,CAAc,EAAEY,cAAc,CAAhB,EAAmBE,UAAU,IAA7B,EAAd;AACD;;;qCAEc;AACb,aAAKd,QAAL,CAAc,EAAEc,UAAU,KAAZ,EAAd;AACA,aAAK1B,KAAL,CAAW4C,OAAX;AACD;;;iCAEU;AAAA;;AACTP,mBAAW,YAAM;AACf,iBAAKtB,aAAL,IAAsB,OAAKA,aAAL,CAAmB8B,KAAnB,EAAtB;AACD,SAFD,EAEG,EAFH;AAGD;;;yCAGkB3C,K,EAAM;AACvB,YAAIA,MAAM4C,MAAN,CAAaC,OAAb,KAAyB,MAAzB,IAAmC7C,MAAM4C,MAAN,CAAaC,OAAb,KAAyB,KAAhE,EAAuE;AACrE,cAAI,KAAKtC,KAAL,CAAWiB,QAAf,EAAyB;AACvB,iBAAKT,YAAL;AACD;AACF;AACF;;;mCAEY;AAAA;;AACX,aAAKL,QAAL,CAAc;AACZJ,iBAAO,IADK;AAEZM,sBAAY,IAFA;AAGZW,mBAAS,KAAKzB,KAAL,CAAWyB;AAHR,SAAd,EAIG,YAAM;AACP,iBAAKR,YAAL;AACA,iBAAKF,aAAL,CAAmBP,KAAnB,GAA2B,EAA3B;AACA,iBAAKR,KAAL,CAAWgD,YAAX;AACD,SARD;AASD;;;sDAsF+B;AAAA;;AAAA,qBAC8B,KAAKhD,KADnC;AAAA,YACtBiD,WADsB,UACtBA,WADsB;AAAA,YACTC,UADS,UACTA,UADS;AAAA,YACGC,OADH,UACGA,OADH;AAAA,YACYC,aADZ,UACYA,aADZ;AAAA,qBAEkC,KAAK3C,KAFvC;AAAA,YAEtBD,KAFsB,UAEtBA,KAFsB;AAAA,YAEfkB,QAFe,UAEfA,QAFe;AAAA,YAELgB,UAFK,UAELA,UAFK;AAAA,YAEO7B,UAFP,UAEOA,UAFP;AAAA,YAEmBC,UAFnB,UAEmBA,UAFnB;;;AAI9B,YAAIuC,UAAU,EAAd;;AAEA,YAAI7C,SAAS,CAACM,UAAd,EAA0B;AACxBuC,oBACE;AAAA;AAAA,cAAa,WAAWF,QAAQG,WAAhC,EAA6C,yBAA7C;AACGF,0BAAc,EAAE5C,YAAF,EAASE,OAAOG,UAAhB,EAAd,EAA4CsC,QAAQI,gBAApD;AADH,WADF;AAKD;;AAED,YAAI,CAAC/C,KAAD,IAAU,CAACM,UAAf,EAA2B;AACzBuC,oBACE;AAAA;AAAA;AACE,yBAAWF,QAAQK,iBADrB;AAEE,6CAFF;AAE2BP;AAF3B,WADF;AAKD;;AAED,YAAI,CAACC,UAAL,EAAiB;AACf,iBACE;AAAA;AAAA;AACA,yBAAWC,QAAQM,uBADnB;AAEA,qDAFA;AAGGJ;AAHH,WADF;AAOD;;AAGD,eACE;AAAA;AAAA;AACE,uBAAWF,QAAQM,uBADrB;AAEE,mDAFF;AAGGJ,iBAHH;AAIE;AAAA;AAAA,cAAa,yBAAb,EAA+B,WAAWF,QAAQO,WAAlD;AACE;AACE,yBAAWP,QAAQQ,gBADrB;AAEE,8CAFF;AAGE,yBAAW,KAAKpC,WAHlB;AAIE,wBAAU,kBAACqC,CAAD;AAAA,uBAAO,OAAK7C,aAAL,GAAqB6C,CAA5B;AAAA,eAJZ;AAKE,4BAAYX,WALd;AAME,+BAAevB,QANjB;AAOE,2BAAW,KAAKjB,KAAL,CAAW,WAAX,CAPb;AAQE,oBAAK,UARP,EAQkB,MAAK,MARvB;AADF;AAJF,SADF;AAkBD;;;8CAEuB;AAAA;;AAAA,sBACqC,KAAKT,KAD1C;AAAA,YACd6D,MADc,WACdA,MADc;AAAA,YACNV,OADM,WACNA,OADM;AAAA,YACGW,aADH,WACGA,aADH;AAAA,YACkBC,cADlB,WACkBA,cADlB;AAAA,sBAE6B,KAAKtD,KAFlC;AAAA,YAEdD,KAFc,WAEdA,KAFc;AAAA,YAEPkB,QAFO,WAEPA,QAFO;AAAA,YAEGF,YAFH,WAEGA,YAFH;AAAA,YAEiBC,OAFjB,WAEiBA,OAFjB;;;AAItB,YAAI,CAACC,QAAL,EAAe;AACb,iBACE;AAAA;AAAA,cAAK,eAAY,MAAjB,EAAwB,IAAI,KAAKjB,KAAL,CAAW,WAAX,CAA5B,EAAqD,MAAK,SAA1D;AACE,mDAAK,MAAK,QAAV,EAAmB,UAAS,IAA5B;AADF,WADF;AAKD;;AAEDoD;;AAEA,YAAIG,gBAAgB;AAAA;AAAA;AAAkBF;AAAlB,SAApB;;AAEA,YAAIrC,QAAQU,MAAR,GAAiB,CAArB,EAAwB;AACtB6B,0BAAgBvC,QAAQwC,GAAR,CAAY,UAACnC,GAAD,EAAMoC,CAAN,EAAY;AACtC,gBAAMxB,aAAalC,UAAUsB,IAAItB,KAAjC;AACA,gBAAMa,YAAYG,iBAAiB0C,CAAnC;AACA,mBAAOH,eAAeI,OAAOC,MAAP,CAAc;AAClCC,mBAAKH,CAD6B;AAElC,0BAAYA,CAFsB;AAGlCxB,oCAHkC;AAIlC4B,kBAAI,OAAK7D,KAAL,CAAW,WAAX,CAJ8B;AAKlC8D,yBAAWpB,QAAQqB,YALe;AAMlCnD,yBAAWG,gBAAgB0C,CANO;AAOlCO,wBAAUjE,UAAUsB,IAAItB,KAAd,GAAsB,GAAtB,GAA4B,IAPJ;AAQlCkE,2BAAa,qBAACC,CAAD,EAAO;AAClB,oBAAMC,UAAUD,EAAE7B,MAAF,CAAS+B,YAAT,CAAsB,UAAtB,CAAhB;AACA,uBAAKjE,QAAL,CAAc,EAAEY,cAAcoD,OAAhB,EAAd;AACD,eAXiC;AAYlCE,0BAAY,oBAACH,CAAD,EAAO;AACjBI,wBAAQC,GAAR,CAAY,QAAZ;AACA,uBAAKpE,QAAL,CAAc,EAAEY,cAAc,IAAhB,EAAd;AACD,eAfiC;AAgBlCyD,2BAAa,qBAACN,CAAD;AAAA,uBAAO,OAAKrE,aAAL,CAAmBwB,IAAItB,KAAvB,EAA8BmE,CAA9B,CAAP;AAAA;AAhBqB,aAAd,EAiBnB7C,GAjBmB,CAAf,EAiBEoC,CAjBF,CAAP;AAkBD,WArBe,CAAhB;AAsBD;AACD,eACE;AAAA;AAAA;AACE,uBAAWf,QAAQ+B,eADrB;AAEE,0CAFF;AAGE;AAAA;AAAA;AACE,oBAAK,SADP;AAEE,yBAAW/B,QAAQgC,UAFrB,EAEiC,wBAFjC;AAGGnB;AAHH;AAHF,SADF;AAWD;;;8CAEuB;AAAA,sBACS,KAAKhE,KADd;AAAA,YACdoF,SADc,WACdA,SADc;AAAA,YACHjC,OADG,WACHA,OADG;;;AAGtB,YAAI,CAACiC,SAAL,EAAgB;;AAEhB,eACE;AAAA;AAAA;AACE,uBAAWjC,QAAQkC,eADrB;AAEE,0CAFF,EAEyB,aAAa,KAAKpF,YAF3C;AAGE;AAAA;AAAA;AACE,yBAAWkD,QAAQmC,WADrB,EACkC,yBADlC;AAAA;AAAA;AAHF,SADF;AAQD;;;0CAEmB;AAClB,aAAKtF,KAAL,CAAWuF,kBAAX,CAA8B,KAAKC,UAAL,CAAgB/E,KAAhB,CAAsB8E,kBAApD;AACD;;;2CAEoB;AACnB,aAAKvF,KAAL,CAAWuF,kBAAX,CAA8B,KAAKC,UAAL,CAAgB/E,KAAhB,CAAsB8E,kBAApD;AACD;;;+BAES;AAAA;;AAAA,sBACuC,KAAKvF,KAD5C;AAAA,YACAyF,IADA,WACAA,IADA;AAAA,YACMC,QADN,WACMA,QADN;AAAA,YACgBnB,SADhB,WACgBA,SADhB;AAAA,YAC2BpB,OAD3B,WAC2BA,OAD3B;AAAA,sBAEgC,KAAK1C,KAFrC;AAAA,YAEAD,KAFA,WAEAA,KAFA;AAAA,YAEOkC,UAFP,WAEOA,UAFP;AAAA,YAEmBhB,QAFnB,WAEmBA,QAFnB;;AAGR,eACE;AAAA;AAAA,YAAQ,mBAAR,EAAoB,WAAW6C,SAA/B;AACE,iBAAK,aAACoB,IAAD;AAAA,qBAAU,OAAKH,UAAL,GAAkBG,IAA5B;AAAA,aADP,EACyC,UAAU,kBAACA,IAAD;AAAA,qBAAU,OAAKC,cAAL,GAAsBD,IAAhC;AAAA,aADnD;AAEE,mDAAO,MAAK,QAAZ,EAAqB,MAAMF,IAA3B,EAAiC,OAAO,8BAAejF,KAAf,CAAxC,EAA+D,UAAUkF,QAAzE,GAFF;AAGE;AAAA;AAAA;AACE,wBAAUhE,QADZ;AAEE,+BAAeA,QAFjB;AAGE,yBAAWyB,QAAQ0C,aAHrB;AAIE,yCAJF,EAIsB,aAAa,KAAK1E,eAJxC;AAKG,iBAAK2E,6BAAL,EALH;AAMG,iBAAKC,qBAAL,EANH;AAOE;AAAA;AAAA;AACE,2BAAW5C,QAAQ6C,eADrB,EACsC,8BADtC;AAEE,qEAAa,UAAUtE,QAAvB,EAAiC,WAAWyB,QAAQ8C,WAApD,EAAiE,yBAAjE;AAFF;AAPF,WAHF;AAeG,eAAKC,qBAAL;AAfH,SADF;AAmBD;;;;IA5SyB,gBAAMC,a;;AA+SlCpG,gBAAcqG,SAAd,GAA0B;AACxB5F,WAAO,oBAAU6F,GADO;AAExB5E,aAAS,oBAAU6E,KAFK;AAGxB1D,aAAS,oBAAU2D,IAHK;AAIxB1C,YAAQ,oBAAU0C,IAJM;AAKxBvF,cAAU,oBAAUuF,IALI;AAMxBrF,kBAAc,oBAAUqF,IANA;AAOxBvD,kBAAc,oBAAUuD,IAPA;AAQxBnB,eAAW,oBAAUoB,IARG;AASxBvD,iBAAa,oBAAUwD,MATC;AAUxBlC,eAAW,oBAAUkC,MAVG;AAWxBtD,aAAS,oBAAUuD,MAXK;AAYxB5C,mBAAe,oBAAU6C,SAAV,CAAoB,CACjC,oBAAUF,MADuB,EAEjC,oBAAUG,OAFuB,CAApB,CAZS;AAgBxBrB,wBAAoB,oBAAUgB;AAhBN,GAA1B;;AAmBAxG,gBAAc8G,YAAd,GAA6B;AAC3BjE,aAAS,mBAAM,CAAE,CADU;AAE3BiB,YAAQ,kBAAM,CAAE,CAFW;AAG3B7C,cAAU,oBAAM,CAAE,CAHS;AAI3BE,kBAAc,wBAAM,CAAE,CAJK;AAK3B8B,kBAAc,wBAAM,CAAE,CALK;AAM3BoC,eAAW,KANgB;AAO3BlC,gBAAY,IAPe;AAQ3BzB,aAAS,EARkB;AAS3BwB,iBAAa,WATc;AAU3Ba,mBAAe,kBAVY;AAW3BX,aAAS;AACP8C,mBAAa,EADN;AAEPD,uBAAiB,EAFV;AAGPV,mBAAa,EAHN;AAIPD,uBAAiB,EAJV;AAKPQ,qBAAe,EALR;AAMPnC,mBAAa,EANN;AAOPC,wBAAkB,EAPX;AAQPwB,kBAAY,EARL;AASPD,uBAAiB,EATV;AAUPzB,+BAAyB,EAVlB;AAWPe,oBAAc,EAXP;AAYPhB,yBAAmB,EAZZ;AAaPF,mBAAa,EAbN;AAcPC,wBAAkB;AAdX,KAXkB;AA2B3BH,0CA3B2B;AA4B3BW,4CA5B2B;AA6B3BwB,wBAAoB,8BAAM,CAAE;AA7BD,GAA7B;;oBAgCe,iCAAwBxF,aAAxB,C","file":"Select.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport enhanceWithClickOutside from 'react-click-outside'\nimport uuid from 'uuid';\n\nimport {\n  KEY_UP,\n  KEY_ESC,\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_BACKSPACE\n} from './constants'\n\nimport Select from './partials/Select'\nimport SelectMenu from './partials/SelectMenu'\nimport SelectValue from './partials/SelectValue'\nimport SelectClear from './partials/SelectClear'\nimport SelectArrow from './partials/SelectArrow'\nimport SelectInput from './partials/SelectInput'\nimport SelectInputField from './partials/SelectInputField'\nimport SelectControl from './partials/SelectControl'\nimport SelectNoResults from './partials/SelectNoResults'\nimport SelectClearZone from './partials/SelectClearZone'\nimport SelectArrowZone from './partials/SelectArrowZone'\nimport SelectMenuOuter from './partials/SelectMenuOuter'\nimport SelectPlaceholder from './partials/SelectPlaceholder'\nimport SelectMultiValueWrapper from './partials/SelectMultiValueWrapper'\n\nimport ValueRenderer from './renderers/ValueRenderer'\nimport OptionRenderer from './renderers/OptionRenderer'\n\nimport stringifyValue from './functions/stringifyValue'\n\nclass WrapperSelect extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.optionsMap = props.options.reduce((agregate, current) => {\n      agregate[current.value] = current\n      return agregate\n    }, {})\n\n    let valueLabel = null\n    if (props.value && this.optionsMap.hasOwnProperty(props.value)) {\n      valueLabel = this.optionsMap[props.value].label\n    }\n\n    this.state = {\n      isOpened: false,\n      isFocused: false,\n      isSelected: false,\n      value: props.value,\n      valueLabel,\n      searchTerm: null,\n      focusedIndex: 0,\n      options: props.options,\n      'aria-owns': this.props['aria-owns'] || uuid.v4()\n    }\n\n    this.inputInnerRef = null\n  }\n\n  openOptions() {\n    this.setState({ focusedIndex: 0, isOpened: true });\n  }\n\n  closeOptions() {\n    this.setState({ isOpened: false });\n    this.props.onClose();\n  }\n\n  setFocus() {\n    setTimeout(() => {\n      this.inputInnerRef && this.inputInnerRef.focus();\n    }, 10);\n  }\n\n  // react-click-outside callback\n  handleClickOutside(event){\n    if (event.target.tagName === 'HTML' || event.target.tagName === 'DIV') {\n      if (this.state.isOpened) {\n        this.closeOptions()\n      }\n    }\n  }\n\n  resetField() {\n    this.setState({\n      value: null,\n      searchTerm: null,\n      options: this.props.options,\n    }, () => {\n      this.closeOptions()\n      this.inputInnerRef.value = ''\n      this.props.onInputClear()\n    })\n  }\n\n  onClearValue = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.resetField();\n  }\n\n  onSelectValue = (newValue, event) => {\n    const { value } = this.state;\n    const label = this.optionsMap[newValue].label;\n    if (value != newValue) {\n      this.setState({\n        value: newValue,\n        valueLabel: label,\n        searchTerm: null\n      }, () => {\n        this.inputInnerRef.value = ''\n        this.props.onChange(newValue);\n      })\n    }\n    this.closeOptions()\n    this.props.onValueClick(newValue, event);\n  }\n\n  onSelectFocused = () => {\n    this.openOptions();\n    this.setState({\n      isFocused: true\n    })\n    this.setFocus();\n  }\n\n  onSearching = (event) => {\n    const { focusedIndex, options, isOpened } = this.state;\n\n    const typing = () => {\n      const filteredOptions = this.props.options.filter((opt) => {\n        const label = opt.label.toLowerCase()\n        const term = this.inputInnerRef.value.toLowerCase()\n        return label.indexOf(term) !== -1\n      });\n\n      this.setState({\n        searchTerm: this.inputInnerRef.value,\n        options: filteredOptions,\n        isOpened: true\n      })\n    }\n\n    const lastIndex = (options.length - 1)\n    switch (event.keyCode) {\n      case KEY_BACKSPACE: // backspace\n        if (!this.inputInnerRef.value) {\n          this.resetField()\n          break;\n        }\n        setTimeout(typing, 1);\n        break;\n      case KEY_UP:\n        this.setState({\n          focusedIndex: (focusedIndex <= 0 ? lastIndex : (focusedIndex - 1))\n        })\n        break;\n      case KEY_DOWN:\n        if (!isOpened) {\n          this.openOptions();\n          break;\n        }\n        this.setState({\n          focusedIndex: (focusedIndex >= lastIndex ? 0 : (focusedIndex + 1))\n        })\n        break;\n      case KEY_ENTER:\n        if (!options.length) break;\n        const newValue = options[focusedIndex].value\n        this.onSelectValue(newValue, event)\n        break;\n      case KEY_ESC:\n        this.closeOptions()\n        break;\n      default:\n        setTimeout(typing, 1);\n    }\n  }\n\n  renderSelectMultiValueWrapper() {\n    const { placeholder, searchable, classes, valueRenderer } = this.props\n    const { value, isOpened, isSelected, valueLabel, searchTerm } = this.state\n\n    let content = '';\n\n    if (value && !searchTerm) {\n      content = (\n        <SelectValue className={classes.selectValue} data-select-value>\n          {valueRenderer({ value, label: valueLabel }, classes.selectValueLabel)}\n        </SelectValue>\n      );\n    }\n\n    if (!value && !searchTerm) {\n      content = (\n        <SelectPlaceholder\n          className={classes.selectPlaceholder}\n          data-select-placeholder>{placeholder}</SelectPlaceholder>\n      )\n    }\n\n    if (!searchable) {\n      return (\n        <SelectMultiValueWrapper\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper>\n          {content}\n        </SelectMultiValueWrapper>\n      );\n    }\n\n\n    return (\n      <SelectMultiValueWrapper\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper>\n        {content}\n        <SelectInput data-select-input className={classes.selectInput}>\n          <SelectInputField\n            className={classes.selectInputField}\n            data-select-input-search\n            onKeyDown={this.onSearching}\n            innerRef={(n) => this.inputInnerRef = n}\n            aria-label={placeholder}\n            aria-expanded={isOpened}\n            aria-owns={this.state['aria-owns']}\n            role=\"combobox\" type=\"text\" />\n        </SelectInput>\n      </SelectMultiValueWrapper>\n    );\n  }\n\n  renderSelectMenuOuter() {\n    const { onOpen, classes, noResultsText, optionRenderer } = this.props;\n    const { value, isOpened, focusedIndex, options } = this.state;\n\n    if (!isOpened) {\n      return (\n        <div aria-hidden=\"true\" id={this.state['aria-owns']} role=\"listbox\">\n          <div role=\"option\" tabIndex=\"-1\" />\n        </div>\n      );\n    }\n\n    onOpen()\n\n    let selectOptions = <SelectNoResults>{noResultsText}</SelectNoResults>;\n\n    if (options.length > 0) {\n      selectOptions = options.map((opt, i) => {\n        const isSelected = value === opt.value;\n        const isFocused = focusedIndex === i;\n        return optionRenderer(Object.assign({\n          key: i,\n          'data-key': i,\n          isSelected,\n          id: this.state['aria-owns'],\n          className: classes.selectOption,\n          isFocused: focusedIndex == i,\n          tabIndex: value === opt.value ? '0' : '-1',\n          onMouseOver: (e) => {\n            const dataKey = e.target.getAttribute('data-key');\n            this.setState({ focusedIndex: dataKey });\n          },\n          onMouseOut: (e) => {\n            console.log('asdsad')\n            this.setState({ focusedIndex: null });\n          },\n          onMouseDown: (e) => this.onSelectValue(opt.value, e)\n        }, opt), i);\n      });\n    }\n    return (\n      <SelectMenuOuter\n        className={classes.selectMenuOuter}\n        data-select-menu-outer>\n        <SelectMenu\n          role=\"listbox\"\n          className={classes.selectMenu} data-select-menu>\n          {selectOptions}\n        </SelectMenu>\n      </SelectMenuOuter>\n    )\n  }\n\n  renderSelectClearZone() {\n    const { clearable, classes } = this.props;\n\n    if (!clearable) return;\n\n    return (\n      <SelectClearZone\n        className={classes.selectClearZone}\n        data-select-clear-zone onMouseDown={this.onClearValue}>\n        <SelectClear\n          className={classes.selectClear} data-select-clear>x</SelectClear>\n      </SelectClearZone>\n    );\n  }\n\n  componentDidMount() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  componentDidUpdate() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  render () {\n    const { name, disabled, className, classes } = this.props;\n    const { value, isSelected, isOpened } = this.state;\n    return (\n      <Select data-select className={className}\n        ref={(node) => this.selectNode = node} innerRef={(node) => this.selectInnerRef = node}>\n        <input type=\"hidden\" name={name} value={stringifyValue(value)} disabled={disabled} />\n        <SelectControl\n          isOpened={isOpened}\n          aria-haspopup={isOpened}\n          className={classes.selectControl}\n          data-select-control onMouseDown={this.onSelectFocused}>\n          {this.renderSelectMultiValueWrapper()}\n          {this.renderSelectClearZone()}\n          <SelectArrowZone\n            className={classes.selectArrowZone} data-select-arrow-zone>\n            <SelectArrow isOpened={isOpened} className={classes.selectArrow} data-select-arrow />\n          </SelectArrowZone>\n        </SelectControl>\n        {this.renderSelectMenuOuter()}\n      </Select>\n    )\n  }\n}\n\nWrapperSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onChange: PropTypes.func,\n  onValueClick: PropTypes.func,\n  onInputClear: PropTypes.func,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  noResultsText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  generatedClassName: PropTypes.func\n}\n\nWrapperSelect.defaultProps = {\n  onClose: () => {},\n  onOpen: () => {},\n  onChange: () => {},\n  onValueClick: () => {},\n  onInputClear: () => {},\n  clearable: false,\n  searchable: true,\n  options: [],\n  placeholder: 'Select...',\n  noResultsText: 'No results found',\n  classes: {\n    selectArrow: '',\n    selectArrowZone: '',\n    selectClear: '',\n    selectClearZone: '',\n    selectControl: '',\n    selectInput: '',\n    selectInputField: '',\n    selectMenu: '',\n    selectMenuOuter: '',\n    selectMultiValueWrapper: '',\n    selectOption: '',\n    selectPlaceholder: '',\n    selectValue: '',\n    selectValueLabel: ''\n  },\n  valueRenderer: ValueRenderer,\n  optionRenderer: OptionRenderer,\n  generatedClassName: () => {}\n}\n\nexport default enhanceWithClickOutside(WrapperSelect)\n"]}