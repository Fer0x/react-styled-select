{"version":3,"sources":["../../src/Select/Select.js"],"names":["SEARCH_INPUT_MIN_SIZE","WrapperSelect","props","optionsMap","options","reduce","agregate","current","value","values","hasOwnProperty","push","Array","isArray","concat","state","Set","isOpened","isFocused","isSelected","searchTerm","searchWidth","focusedIndex","v4","inputInnerRef","searchSizeRef","setState","getOptions","onOpen","onClose","setTimeout","focus","event","target","tagName","closeOptions","multi","from","pop","onChange","onInputClear","filter","opt","label","toLowerCase","trim","has","placeholder","searchable","classes","valueRenderer","SelectValueComp","SelectWrapperComp","content","size","map","key","onRemoveTag","selectValue","selectValueLabel","selectPlaceholder","selectMultiValueWrapper","selectInput","width","selectInputField","onSearching","n","noResultsText","optionRenderer","selectOptions","length","i","Object","assign","id","className","selectOption","tabIndex","onMouseOver","e","dataKey","getAttribute","onMouseOut","onMouseDown","onSelectValue","selectMenuOuter","selectMenu","clearable","selectClearZone","onClearValue","selectClear","generatedClassName","selectNode","name","disabled","node","selectInnerRef","selectControl","onSelectFocused","renderSelectMultiValueWrapper","renderSelectClearZone","selectArrowZone","selectArrow","renderSelectMenuOuter","PureComponent","stopPropagation","delete","preventDefault","resetField","newValue","clear","add","onValueClick","openOptions","setFocus","typing","filteredOptions","term","indexOf","getBoundingClientRect","lastIndex","keyCode","propTypes","any","array","func","bool","string","object","oneOfType","element","defaultProps"],"mappings":"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","file":"Select.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport enhanceWithClickOutside from 'react-click-outside'\nimport uuid from 'uuid';\n\nimport {\n  KEY_UP,\n  KEY_ESC,\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_BACKSPACE\n} from './constants'\n\nconst SEARCH_INPUT_MIN_SIZE = 1;\n\nimport Select from './partials/Select'\nimport SelectMenu from './partials/SelectMenu'\nimport SelectValue from './partials/SelectValue'\nimport SelectMultiValue from './partials/SelectMultiValue'\nimport SelectClear from './partials/SelectClear'\nimport SelectArrow from './partials/SelectArrow'\nimport SelectInput from './partials/SelectInput'\nimport SelectInputField from './partials/SelectInputField'\nimport SelectInputFieldSize from './partials/SelectInputFieldSize'\nimport SelectControl from './partials/SelectControl'\nimport SelectNoResults from './partials/SelectNoResults'\nimport SelectClearZone from './partials/SelectClearZone'\nimport SelectArrowZone from './partials/SelectArrowZone'\nimport SelectMenuOuter from './partials/SelectMenuOuter'\nimport SelectPlaceholder from './partials/SelectPlaceholder'\nimport SelectValueWrapper from './partials/SelectValueWrapper'\nimport SelectMultiValueWrapper from './partials/SelectMultiValueWrapper'\n\nimport ValueRenderer from './renderers/ValueRenderer'\nimport OptionRenderer from './renderers/OptionRenderer'\n\nimport stringifyValue from './functions/stringifyValue'\n\nclass WrapperSelect extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.optionsMap = props.options.reduce((agregate, current) => {\n      agregate[current.value] = current\n      return agregate\n    }, {})\n\n    let values = [];\n    if (props.value && this.optionsMap.hasOwnProperty(props.value)) {\n      values.push(props.value);\n    }\n\n    if (Array.isArray(props.value)) {\n      values = values.concat(props.value);\n    }\n\n    this.state = {\n      values: new Set(values),\n      isOpened: false,\n      isFocused: false,\n      isSelected: false,\n      searchTerm: null,\n      searchWidth: 1,\n      focusedIndex: 0,\n      options: props.options,\n      'aria-owns': this.props['aria-owns'] || uuid.v4(),\n      'input-field-id': uuid.v4()\n    }\n\n    this.inputInnerRef = null\n    this.searchSizeRef = null;\n  }\n\n  openOptions() {\n    this.setState({\n      options: this.getOptions(),\n      focusedIndex: 0,\n      isOpened: true\n    });\n    this.props.onOpen();\n  }\n\n  closeOptions() {\n    this.setState({ isOpened: false });\n    this.props.onClose();\n  }\n\n  setFocus() {\n    setTimeout(() => {\n      this.inputInnerRef && this.inputInnerRef.focus();\n    }, 10);\n  }\n\n  // react-click-outside callback\n  handleClickOutside(event){\n    if (event.target.tagName === 'HTML' || event.target.tagName === 'DIV') {\n      if (this.state.isOpened) {\n        this.closeOptions()\n      }\n    }\n  }\n\n  onRemoveTag = (props, e) => {\n    e.stopPropagation();\n    const { multi } = this.props;\n\n    this.state.values.delete(props.value);\n\n    this.setState({\n      values: new Set(Array.from(this.state.values))\n    }, () => {\n      this.props.onChange(Array.from(this.state.values));\n    });\n  }\n\n  resetField() {\n    const { multi } = this.props;\n\n    let values = [];\n    if (multi) {\n      values = Array.from(this.state.values);\n      values.pop();\n      this.props.onChange(values);\n    }\n\n    this.setState({\n      values: new Set(values),\n      searchTerm: null,\n      focusedIndex: 0,\n      options: this.props.options,\n    }, () => {\n      this.closeOptions()\n      this.inputInnerRef.value = ''\n      this.props.onInputClear()\n    })\n  }\n\n  onClearValue = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.resetField();\n  }\n\n  onSelectValue = (newValue, event) => {\n    const { multi } = this.props;\n    const { values } = this.state;\n\n    !multi && values.clear(); // when is not multi select\n\n    if (!values.has(newValue)) {\n      values.add(newValue);\n      this.setState({\n        values,\n        searchTerm: null,\n        focusedIndex: 0\n      }, () => {\n        this.inputInnerRef.value = ''\n        this.props.onChange(multi ? Array.from(values) : newValue);\n      })\n    }\n    this.closeOptions()\n    this.props.onValueClick(multi ? Array.from(values) : newValue, event);\n  }\n\n  onSelectFocused = () => {\n    this.setState({\n      isFocused: true\n    })\n    this.openOptions();\n    this.setFocus();\n  }\n\n  getOptions() {\n    const { multi } = this.props;\n    const { values } = this.state;\n    return this.props.options.filter((opt) => {\n      const label = opt.label.toLowerCase().trim()\n      if (values.has(label) && multi) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  onSearching = (event) => {\n    const { focusedIndex, options, isOpened } = this.state;\n\n    const typing = () => {\n      const filteredOptions = this.getOptions().filter((opt) => {\n        const label = opt.label.toLowerCase().trim()\n        const term = this.inputInnerRef.value.toLowerCase().trim()\n        return label.indexOf(term) !== -1\n      });\n\n      this.setState({\n        searchTerm: this.inputInnerRef.value,\n        searchWidth,\n        options: filteredOptions,\n        isOpened: true,\n        focusedIndex: 0\n      })\n\n      let searchWidth = SEARCH_INPUT_MIN_SIZE;\n      if (this.searchSizeRef) {\n        const width = this.searchSizeRef.getBoundingClientRect().width;\n        searchWidth = width > SEARCH_INPUT_MIN_SIZE ? width : SEARCH_INPUT_MIN_SIZE;\n      }\n\n      setTimeout(() => {\n        this.setState({ searchWidth })\n      });\n    }\n\n    const lastIndex = (options.length - 1)\n    switch (event.keyCode) {\n      case KEY_BACKSPACE: // backspace\n        if (!this.inputInnerRef.value) {\n          this.resetField();\n          break;\n        }\n        setTimeout(typing, 1);\n        break;\n      case KEY_UP:\n        this.setState({\n          focusedIndex: (focusedIndex <= 0 ? lastIndex : (focusedIndex - 1))\n        })\n        break;\n      case KEY_DOWN:\n        if (!isOpened) {\n          this.openOptions();\n          break;\n        }\n        this.setState({\n          focusedIndex: (focusedIndex >= lastIndex ? 0 : (focusedIndex + 1))\n        })\n        break;\n      case KEY_ENTER:\n        if (!options.length) break;\n        const newValue = options[focusedIndex].value\n        this.onSelectValue(newValue, event);\n        break;\n      case KEY_ESC:\n        this.closeOptions();\n        break;\n      default:\n        setTimeout(typing, 1);\n    }\n  }\n\n  renderSelectMultiValueWrapper() {\n    const { multi, placeholder, searchable, classes, valueRenderer } = this.props;\n    const { values, isOpened, isSelected, searchTerm, searchWidth } = this.state;\n\n    const SelectValueComp = multi ? SelectMultiValue : SelectValue;\n    const SelectWrapperComp = multi ? SelectMultiValueWrapper : SelectValueWrapper;\n\n    let content = '';\n\n    if (values.size) {\n      content = Array.from(values).map((value, key) => (\n        <SelectValueComp value={value} onRemoveTag={this.onRemoveTag} key={key} className={classes.selectValue} data-select-value data-multi-value={multi}>\n          {valueRenderer({ multi, value, label: this.optionsMap[value].label }, classes.selectValueLabel)}\n        </SelectValueComp>\n      ));\n    }\n\n    if (!values.size && !searchTerm) {\n      content = (\n        <SelectPlaceholder\n          className={classes.selectPlaceholder}\n          data-select-placeholder>{placeholder}</SelectPlaceholder>\n      )\n    }\n\n    if (!searchable) {\n      return (\n        <SelectWrapperComp\n          for={this.state['input-field-id']}\n          className={classes.selectMultiValueWrapper}\n          data-select-multi-value-wrapper={multi}>\n          {content}\n        </SelectWrapperComp>\n      );\n    }\n\n    return (\n      <SelectWrapperComp\n        for={this.state['input-field-id']}\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper={multi}>\n        {content}\n        <SelectInput data-select-input className={classes.selectInput}>\n          <SelectInputField\n            style={{width: `${searchWidth}px`}}\n            id={this.state['input-field-id']}\n            className={classes.selectInputField}\n            data-select-input-search\n            onKeyDown={this.onSearching}\n            innerRef={(n) => this.inputInnerRef = n}\n            aria-label={placeholder}\n            aria-expanded={isOpened}\n            aria-owns={this.state['aria-owns']}\n            role=\"combobox\" type=\"text\" />\n        </SelectInput>\n        <SelectInputFieldSize\n          data-select-input-size\n          innerRef={(n) => this.searchSizeRef = n}>{searchTerm}</SelectInputFieldSize>\n      </SelectWrapperComp>\n    );\n  }\n\n  renderSelectMenuOuter() {\n    const { classes, noResultsText, optionRenderer } = this.props;\n    const { values, isOpened, focusedIndex, options } = this.state;\n\n    if (!isOpened) {\n      return (\n        <div aria-hidden=\"true\" id={['aria-owns']} role=\"listbox\">\n          <div role=\"option\" tabIndex=\"-1\" />\n        </div>\n      );\n    }\n\n    let selectOptions = <SelectNoResults>{noResultsText}</SelectNoResults>;\n\n    if (options.length > 0) {\n      selectOptions = options.map((opt, i) => {\n        const isSelected = values.has(opt.value);\n        const isFocused = focusedIndex === i;\n        return optionRenderer(Object.assign({\n          key: i,\n          'data-key': i,\n          isSelected,\n          id: this.state['aria-owns'],\n          className: classes.selectOption,\n          isFocused: focusedIndex == i,\n          tabIndex: values.has(opt.value) ? '0' : '-1',\n          onMouseOver: (e) => {\n            const dataKey = e.target.getAttribute('data-key');\n            this.setState({ focusedIndex: dataKey });\n          },\n          onMouseOut: (e) => {\n            this.setState({ focusedIndex: null });\n          },\n          onMouseDown: (e) => this.onSelectValue(opt.value, e)\n        }, opt), i);\n      });\n    }\n    return (\n      <SelectMenuOuter\n        className={classes.selectMenuOuter}\n        data-select-menu-outer>\n        <SelectMenu\n          role=\"listbox\"\n          className={classes.selectMenu} data-select-menu>\n          {selectOptions}\n        </SelectMenu>\n      </SelectMenuOuter>\n    )\n  }\n\n  renderSelectClearZone() {\n    const { clearable, classes } = this.props;\n\n    if (!clearable) return;\n\n    return (\n      <SelectClearZone\n        className={classes.selectClearZone}\n        data-select-clear-zone onMouseDown={this.onClearValue}>\n        <SelectClear\n          className={classes.selectClear} data-select-clear>×</SelectClear>\n      </SelectClearZone>\n    );\n  }\n\n  componentDidMount() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  componentDidUpdate() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  render () {\n    const { name, disabled, className, classes } = this.props;\n    const { value, isSelected, isOpened } = this.state;\n    return (\n      <Select data-select className={className}\n        ref={(node) => this.selectNode = node} innerRef={(node) => this.selectInnerRef = node}>\n        <input type=\"hidden\" name={name} value={stringifyValue(value)} disabled={disabled} />\n        <SelectControl\n          isOpened={isOpened}\n          aria-haspopup={isOpened}\n          className={classes.selectControl}\n          data-select-control onMouseDown={this.onSelectFocused}>\n          {this.renderSelectMultiValueWrapper()}\n          {this.renderSelectClearZone()}\n          <SelectArrowZone\n            className={classes.selectArrowZone} data-select-arrow-zone>\n            <SelectArrow isOpened={isOpened} className={classes.selectArrow} data-select-arrow />\n          </SelectArrowZone>\n        </SelectControl>\n        {this.renderSelectMenuOuter()}\n      </Select>\n    )\n  }\n}\n\nWrapperSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onChange: PropTypes.func,\n  onValueClick: PropTypes.func,\n  onInputClear: PropTypes.func,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  noResultsText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  generatedClassName: PropTypes.func\n}\n\nWrapperSelect.defaultProps = {\n  onClose: () => {},\n  onOpen: () => {},\n  onChange: () => {},\n  onValueClick: () => {},\n  onInputClear: () => {},\n  clearable: false,\n  searchable: true,\n  multi: false,\n  options: [],\n  placeholder: 'Select...',\n  noResultsText: 'No results found',\n  classes: {\n    selectArrow: '',\n    selectArrowZone: '',\n    selectClear: '',\n    selectClearZone: '',\n    selectControl: '',\n    selectInput: '',\n    selectInputField: '',\n    selectMenu: '',\n    selectMenuOuter: '',\n    selectMultiValueWrapper: '',\n    selectOption: '',\n    selectPlaceholder: '',\n    selectValue: '',\n    selectValueLabel: ''\n  },\n  valueRenderer: ValueRenderer,\n  optionRenderer: OptionRenderer,\n  generatedClassName: () => {}\n}\n\nexport default enhanceWithClickOutside(WrapperSelect)\n"]}