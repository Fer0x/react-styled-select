{"version":3,"sources":["../../src/Select/Select.js"],"names":["SEARCH_INPUT_MIN_SIZE","optionsMapReducer","agregate","current","value","WrapperSelect","props","indexValues","values","optionsMap","hasOwnProperty","push","Array","isArray","concat","state","Set","isOpened","isFocused","isSelected","searchTerm","searchWidth","focusedIndex","options","v4","inputInnerRef","searchSizeRef","shouldFireClickOutsideHack","onSearchingBinded","onSearching","bind","onRemoveTagBinded","onRemoveTag","onClearValueBinded","onClearValue","onSelectValueBinded","onSelectValue","onSelectFocusedBinded","onSelectFocused","reduce","setState","getOptions","onOpen","onClose","_this","setTimeout","focus","event","closeOptions","stopPropagation","multi","delete","from","onChange","pop","onInputClear","preventDefault","resetField","newValue","clear","has","add","onValueClick","clearInterval","focusedTimeout","openOptions","setFocus","filter","opt","label","toLowerCase","trim","onInputChange","onTyping","typing","term","filteredOptions","indexOf","width","getBoundingClientRect","lastIndex","length","keyCode","placeholder","searchable","classes","valueRenderer","SelectValueComp","SelectWrapperComp","content","size","map","key","selectValue","selectValueLabel","selectPlaceholder","n","selectMultiValueWrapper","selectInput","selectInputField","noResultsText","optionRenderer","selectOptions","i","Object","assign","id","className","selectOption","tabIndex","onMouseOver","e","dataKey","target","getAttribute","onMouseOut","onMouseDown","selectMenuOuter","selectMenu","clearable","selectClearZone","selectClear","generatedClassName","selectNode","nextProps","name","disabled","node","selectInnerRef","selectControl","renderSelectMultiValueWrapper","renderSelectClearZone","selectArrowZone","selectArrow","renderSelectMenuOuter","PureComponent","propTypes","any","array","func","bool","string","object","oneOfType","element","defaultProps","EnhanceWrapperSelect","ShadowWrapperSelect","NormalAsync","ShadowAsync","Async","ShadowDOM"],"mappings":"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","file":"Select.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport enhanceWithClickOutside from 'react-click-outside'\nimport uuid from 'uuid';\nimport SelectAsync from './Async'\nimport shadowDOM from '../helpers/shadowDOM'\n\nimport {\n  KEY_UP,\n  KEY_ESC,\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_BACKSPACE\n} from './constants'\n\nconst SEARCH_INPUT_MIN_SIZE = 1;\n\nimport Select from './partials/Select'\nimport SelectMenu from './partials/SelectMenu'\nimport SelectValue from './partials/SelectValue'\nimport SelectMultiValue from './partials/SelectMultiValue'\nimport SelectClear from './partials/SelectClear'\nimport SelectArrow from './partials/SelectArrow'\nimport SelectInput from './partials/SelectInput'\nimport SelectInputField from './partials/SelectInputField'\nimport SelectInputFieldSize from './partials/SelectInputFieldSize'\nimport SelectControl from './partials/SelectControl'\nimport SelectNoResults from './partials/SelectNoResults'\nimport SelectClearZone from './partials/SelectClearZone'\nimport SelectArrowZone from './partials/SelectArrowZone'\nimport SelectMenuOuter from './partials/SelectMenuOuter'\nimport SelectPlaceholder from './partials/SelectPlaceholder'\nimport SelectValueWrapper from './partials/SelectValueWrapper'\nimport SelectMultiValueWrapper from './partials/SelectMultiValueWrapper'\n\nimport ValueRenderer from './renderers/ValueRenderer'\nimport OptionRenderer from './renderers/OptionRenderer'\n\nimport stringifyValue from './functions/stringifyValue'\n\nfunction optionsMapReducer(agregate, current) {\n  agregate[current.value] = current\n  return agregate\n}\n\nclass WrapperSelect extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.indexValues(props)\n\n    let values = [];\n    if (props.value && this.optionsMap.hasOwnProperty(props.value)) {\n      values.push(props.value)\n    }\n\n    if (Array.isArray(props.value)) {\n      values = values.concat(props.value)\n    }\n\n    this.state = {\n      values: new Set(values),\n      isOpened: false,\n      isFocused: false,\n      isSelected: false,\n      searchTerm: null,\n      searchWidth: 1,\n      focusedIndex: 0,\n      options: props.options,\n      'aria-owns': this.props['aria-owns'] || uuid.v4(),\n      'input-field-id': uuid.v4()\n    }\n\n    this.inputInnerRef = null\n    this.searchSizeRef = null\n    this.shouldFireClickOutsideHack = null\n\n    this.onSearchingBinded = this.onSearching.bind(this)\n    this.onRemoveTagBinded = this.onRemoveTag.bind(this)\n    this.onClearValueBinded = this.onClearValue.bind(this)\n    this.onSelectValueBinded = this.onSelectValue.bind(this)\n    this.onSelectFocusedBinded = this.onSelectFocused.bind(this)\n  }\n\n  indexValues(props) {\n    this.optionsMap = props.options.reduce(optionsMapReducer, {})\n  }\n\n  openOptions() {\n    this.setState({\n      options: this.getOptions(),\n      focusedIndex: 0,\n      isOpened: true\n    })\n    this.props.onOpen()\n  }\n\n  closeOptions() {\n    this.setState({ isOpened: false })\n    this.props.onClose()\n  }\n\n  setFocus() {\n    let _this = this\n    setTimeout(function() {\n      _this.inputInnerRef && _this.inputInnerRef.focus()\n    }, 10)\n  }\n\n  // react-click-outside callback\n\n  handleClickOutside(event) {\n    if (this.state.isOpened && this.shouldFireClickOutsideHack) {\n      this.closeOptions()\n      this.shouldFireClickOutsideHack = false\n    }\n  }\n\n  onRemoveTag(props, event) {\n    event.stopPropagation()\n    const { multi } = this.props;\n\n    this.state.values.delete(props.value)\n\n    this.setState({\n      values: new Set(Array.from(this.state.values))\n    }, () => {\n      this.props.onChange(Array.from(this.state.values))\n    })\n  }\n\n  resetField() {\n    const { multi } = this.props;\n\n    let values = [];\n    if (multi) {\n      values = Array.from(this.state.values)\n      values.pop()\n      this.props.onChange(values)\n    }\n\n    this.setState({\n      values: new Set(values),\n      searchTerm: null,\n      focusedIndex: 0,\n      options: this.props.options,\n    }, () => {\n      this.closeOptions()\n      this.inputInnerRef.value = ''\n      this.props.onInputClear()\n    })\n  }\n\n  onClearValue(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    this.resetField()\n  }\n\n  onSelectValue(newValue, event) {\n    const { multi } = this.props;\n    const { values } = this.state;\n\n    !multi && values.clear() // when is not multi select\n\n    if (!values.has(newValue)) {\n      values.add(newValue)\n      this.setState({\n        values,\n        searchTerm: null,\n        focusedIndex: 0\n      }, () => {\n        this.inputInnerRef.value = ''\n        this.props.onChange(multi ? Array.from(values) : newValue)\n      })\n    }\n    this.closeOptions()\n    this.props.onValueClick(multi ? Array.from(values) : newValue, event)\n  }\n\n  onSelectFocused(event) {\n    this.shouldFireClickOutsideHack = false\n\n    clearInterval(this.focusedTimeout)\n    this.focusedTimeout = setTimeout(() => {\n      this.shouldFireClickOutsideHack = true\n    }, 200)\n\n    this.setState({\n      isFocused: true\n    })\n\n    this.openOptions()\n    this.setFocus()\n  }\n\n  getOptions() {\n    const { multi } = this.props;\n    const { values } = this.state;\n    return this.props.options.filter((opt) => {\n      const label = opt.label.toLowerCase().trim()\n      if (values.has(label) && multi) {\n        return false;\n      }\n      return true;\n    })\n  }\n\n  onSearching(event) {\n    const { onInputChange, onTyping } = this.props\n    const { focusedIndex, options, isOpened } = this.state;\n\n    const typing = () => {\n      const term = this.inputInnerRef.value.toLowerCase().trim()\n\n      onTyping(term)\n\n      const filteredOptions = this.getOptions().filter((opt) => {\n        const label = opt.label.toLowerCase().trim()\n        return label.indexOf(term) !== -1\n      })\n\n      this.setState({\n        searchTerm: this.inputInnerRef.value,\n        searchWidth,\n        options: filteredOptions,\n        isOpened: true,\n        focusedIndex: 0\n      })\n\n      let searchWidth = SEARCH_INPUT_MIN_SIZE;\n      if (this.searchSizeRef) {\n        const width = this.searchSizeRef.getBoundingClientRect().width;\n        searchWidth = width > SEARCH_INPUT_MIN_SIZE ? width : SEARCH_INPUT_MIN_SIZE;\n      }\n\n      setTimeout(() => {\n        this.setState({ searchWidth })\n      })\n    }\n\n    const lastIndex = (options.length - 1)\n    switch (event.keyCode) {\n      case KEY_BACKSPACE: // backspace\n        if (!this.inputInnerRef.value) {\n          this.resetField()\n          break;\n        }\n        setTimeout(typing, 1)\n        break;\n      case KEY_UP:\n        this.setState({\n          focusedIndex: (focusedIndex <= 0 ? lastIndex : (focusedIndex - 1))\n        })\n        break;\n      case KEY_DOWN:\n        if (!isOpened) {\n          this.openOptions()\n          break;\n        }\n        this.setState({\n          focusedIndex: (focusedIndex >= lastIndex ? 0 : (focusedIndex + 1))\n        })\n        break;\n      case KEY_ENTER:\n        if (!options.length) break;\n        const newValue = options[focusedIndex].value\n        this.onSelectValueBinded(newValue, event)\n        break;\n      case KEY_ESC:\n        this.closeOptions()\n        break;\n      default:\n        setTimeout(typing, 1)\n    }\n  }\n\n  renderSelectMultiValueWrapper() {\n    const { multi, placeholder, searchable, classes, valueRenderer } = this.props;\n    const { values, isOpened, isSelected, searchTerm, searchWidth } = this.state;\n\n    const SelectValueComp = multi ? SelectMultiValue : SelectValue;\n    const SelectWrapperComp = multi ? SelectMultiValueWrapper : SelectValueWrapper;\n\n    let content = '';\n\n    if (values.size) {\n      content = Array.from(values).map((value, key) => (\n        <SelectValueComp value={value} onRemoveTag={this.onRemoveTagBinded} key={key} className={classes.selectValue} data-select-value data-multi-value={multi}>\n          {valueRenderer({ multi, value, label: this.optionsMap[value].label }, classes.selectValueLabel)}\n        </SelectValueComp>\n      ))\n    }\n\n    if (!values.size && !searchTerm) {\n      content = (\n        <SelectPlaceholder\n          className={classes.selectPlaceholder}\n          data-select-placeholder>{placeholder}</SelectPlaceholder>\n      )\n    }\n\n    if (!searchable) {\n      return (\n        <SelectWrapperComp\n          for={this.state['input-field-id']}\n          innerRef={(n) => this.inputInnerRef = n}\n          className={classes.selectMultiValueWrapper}\n          data-select-multi-value-wrapper={multi}>\n          {content}\n        </SelectWrapperComp>\n      )\n    }\n\n    return (\n      <SelectWrapperComp\n        for={this.state['input-field-id']}\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper={multi}>\n        {content}\n        <SelectInput data-select-input className={classes.selectInput}>\n          <SelectInputField\n            style={{width: `${searchWidth}px`}}\n            id={this.state['input-field-id']}\n            className={classes.selectInputField}\n            data-select-input-search\n            onKeyDown={this.onSearchingBinded}\n            onChange={this.props.onInputChange}\n            innerRef={(n) => this.inputInnerRef = n}\n            aria-label={placeholder}\n            aria-expanded={isOpened}\n            aria-owns={this.state['aria-owns']}\n            role=\"combobox\" type=\"text\" />\n        </SelectInput>\n        <SelectInputFieldSize\n          data-select-input-size\n          innerRef={(n) => this.searchSizeRef = n}>{searchTerm}</SelectInputFieldSize>\n      </SelectWrapperComp>\n    )\n  }\n\n  renderSelectMenuOuter() {\n    const { classes, noResultsText, optionRenderer } = this.props;\n    const { values, isOpened, focusedIndex, options } = this.state;\n\n    if (!isOpened) {\n      return (\n        <div aria-hidden=\"true\" id={['aria-owns']} role=\"listbox\">\n          <div role=\"option\" tabIndex=\"-1\" />\n        </div>\n      )\n    }\n\n    let selectOptions = <SelectNoResults>{noResultsText}</SelectNoResults>;\n\n    if (options.length > 0) {\n      selectOptions = options.map((opt, i) => {\n        const isSelected = values.has(opt.value)\n        const isFocused = focusedIndex === i;\n        return optionRenderer(Object.assign({\n          key: i,\n          'data-key': i,\n          isSelected,\n          id: this.state['aria-owns'],\n          className: classes.selectOption,\n          isFocused: focusedIndex == i,\n          tabIndex: values.has(opt.value) ? '0' : '-1',\n          onMouseOver: (e) => {\n            const dataKey = e.target.getAttribute('data-key')\n            this.setState({ focusedIndex: dataKey })\n          },\n          onMouseOut: (e) => {\n            this.setState({ focusedIndex: null })\n          },\n          onMouseDown: (e) => this.onSelectValueBinded(opt.value, e)\n        }, opt), i)\n      })\n    }\n    return (\n      <SelectMenuOuter\n        className={classes.selectMenuOuter}\n        data-select-menu-outer>\n        <SelectMenu\n          role=\"listbox\"\n          className={classes.selectMenu} data-select-menu>\n          {selectOptions}\n        </SelectMenu>\n      </SelectMenuOuter>\n    )\n  }\n\n  renderSelectClearZone() {\n    const { clearable, classes } = this.props;\n\n    if (!clearable) return;\n\n    return (\n      <SelectClearZone\n        className={classes.selectClearZone}\n        data-select-clear-zone onMouseDown={this.onClearValueBinded}>\n        <SelectClear\n          className={classes.selectClear} data-select-clear>×</SelectClear>\n      </SelectClearZone>\n    )\n  }\n\n  componentDidMount() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName)\n  }\n\n  componentDidUpdate() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      options: nextProps.options\n    }, () => this.indexValues(nextProps))\n  }\n\n  render () {\n    const { name, disabled, className, classes } = this.props;\n    const { value, isSelected, isOpened } = this.state;\n    return (\n      <Select data-select className={className}\n        ref={(node) => this.selectNode = node} innerRef={(node) => this.selectInnerRef = node}>\n        <input type=\"hidden\" name={name} value={stringifyValue(value)} disabled={disabled} />\n        <SelectControl\n          isOpened={isOpened}\n          aria-haspopup={isOpened}\n          className={classes.selectControl}\n          data-select-control onMouseDown={this.onSelectFocusedBinded}>\n          {this.renderSelectMultiValueWrapper()}\n          {this.renderSelectClearZone()}\n          <SelectArrowZone\n            className={classes.selectArrowZone} data-select-arrow-zone>\n            <SelectArrow isOpened={isOpened} className={classes.selectArrow} data-select-arrow />\n          </SelectArrowZone>\n        </SelectControl>\n        {this.renderSelectMenuOuter()}\n      </Select>\n    )\n  }\n}\n\nWrapperSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onChange: PropTypes.func,\n  onValueClick: PropTypes.func,\n  onInputClear: PropTypes.func,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  noResultsText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  generatedClassName: PropTypes.func\n}\n\nWrapperSelect.defaultProps = {\n  onClose: () => {},\n  onOpen: () => {},\n  onChange: () => {},\n  onInputChange: () => {},\n  onTyping: () => {},\n  onValueClick: () => {},\n  onInputClear: () => {},\n  clearable: false,\n  searchable: true,\n  multi: false,\n  options: [],\n  placeholder: 'Select...',\n  noResultsText: 'No results found',\n  classes: {\n    selectArrow: '',\n    selectArrowZone: '',\n    selectClear: '',\n    selectClearZone: '',\n    selectControl: '',\n    selectInput: '',\n    selectInputField: '',\n    selectMenu: '',\n    selectMenuOuter: '',\n    selectMultiValueWrapper: '',\n    selectOption: '',\n    selectPlaceholder: '',\n    selectValue: '',\n    selectValueLabel: ''\n  },\n  valueRenderer: ValueRenderer,\n  optionRenderer: OptionRenderer,\n  generatedClassName: () => {}\n}\n\nconst EnhanceWrapperSelect = enhanceWithClickOutside(WrapperSelect)\nconst ShadowWrapperSelect = shadowDOM(EnhanceWrapperSelect)\n\nconst NormalAsync = props => <SelectAsync {...props}><EnhanceWrapperSelect /></SelectAsync>\nconst ShadowAsync = props => <SelectAsync {...props}><ShadowWrapperSelect /></SelectAsync>\n\nShadowWrapperSelect.Async = ShadowAsync\n\nexport const Async  = EnhanceWrapperSelect.Async = NormalAsync\nexport const ShadowDOM = EnhanceWrapperSelect.ShadowDOM = ShadowWrapperSelect\n\nexport default EnhanceWrapperSelect\n"]}