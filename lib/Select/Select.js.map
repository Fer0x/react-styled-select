{"version":3,"sources":["../../src/Select/Select.js"],"names":["SEARCH_INPUT_MIN_SIZE","WrapperSelect","props","optionsMap","options","reduce","agregate","current","value","values","hasOwnProperty","push","state","Set","isOpened","isFocused","isSelected","searchTerm","searchWidth","focusedIndex","v4","inputInnerRef","searchSizeRef","setState","getOptions","onClose","setTimeout","focus","event","target","tagName","closeOptions","multi","Array","from","pop","onInputClear","filter","opt","label","toLowerCase","trim","has","placeholder","searchable","classes","valueRenderer","SelectValueComp","SelectWrapperComp","content","size","map","key","selectValue","selectValueLabel","selectPlaceholder","selectMultiValueWrapper","selectInput","width","selectInputField","onSearching","n","onOpen","noResultsText","optionRenderer","selectOptions","length","i","Object","assign","id","className","selectOption","tabIndex","onMouseDown","e","onSelectValue","selectMenuOuter","selectMenu","clearable","selectClearZone","onClearValue","selectClear","generatedClassName","selectNode","name","disabled","node","selectInnerRef","selectControl","onSelectFocused","renderSelectMultiValueWrapper","renderSelectClearZone","selectArrowZone","selectArrow","renderSelectMenuOuter","PureComponent","preventDefault","stopPropagation","resetField","newValue","add","onChange","onValueClick","openOptions","setFocus","typing","filteredOptions","term","indexOf","getBoundingClientRect","lastIndex","keyCode","propTypes","any","array","func","bool","string","object","oneOfType","element","defaultProps"],"mappings":"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","file":"Select.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport enhanceWithClickOutside from 'react-click-outside'\nimport uuid from 'uuid';\n\nimport {\n  KEY_UP,\n  KEY_ESC,\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_BACKSPACE\n} from './constants'\n\nconst SEARCH_INPUT_MIN_SIZE = 1;\n\nimport Select from './partials/Select'\nimport SelectMenu from './partials/SelectMenu'\nimport SelectValue from './partials/SelectValue'\nimport SelectMultiValue from './partials/SelectMultiValue'\nimport SelectClear from './partials/SelectClear'\nimport SelectArrow from './partials/SelectArrow'\nimport SelectInput from './partials/SelectInput'\nimport SelectInputField from './partials/SelectInputField'\nimport SelectInputFieldSize from './partials/SelectInputFieldSize'\nimport SelectControl from './partials/SelectControl'\nimport SelectNoResults from './partials/SelectNoResults'\nimport SelectClearZone from './partials/SelectClearZone'\nimport SelectArrowZone from './partials/SelectArrowZone'\nimport SelectMenuOuter from './partials/SelectMenuOuter'\nimport SelectPlaceholder from './partials/SelectPlaceholder'\nimport SelectValueWrapper from './partials/SelectValueWrapper'\nimport SelectMultiValueWrapper from './partials/SelectMultiValueWrapper'\n\nimport ValueRenderer from './renderers/ValueRenderer'\nimport OptionRenderer from './renderers/OptionRenderer'\n\nimport stringifyValue from './functions/stringifyValue'\n\nclass WrapperSelect extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.optionsMap = props.options.reduce((agregate, current) => {\n      agregate[current.value] = current\n      return agregate\n    }, {})\n\n    let values = [];\n    if (props.value && this.optionsMap.hasOwnProperty(props.value)) {\n      values.push( props.value );\n    }\n\n    this.state = {\n      values: new Set(values),\n      isOpened: false,\n      isFocused: false,\n      isSelected: false,\n      searchTerm: null,\n      searchWidth: 1,\n      focusedIndex: 0,\n      options: props.options,\n      'aria-owns': this.props['aria-owns'] || uuid.v4(),\n      'input-field-id': uuid.v4()\n    }\n\n    this.inputInnerRef = null\n    this.searchSizeRef = null;\n  }\n\n  openOptions() {\n    this.setState({\n      isOpened: true,\n      options: this.getOptions()\n    });\n  }\n\n  closeOptions() {\n    this.setState({ isOpened: false });\n    this.props.onClose();\n  }\n\n  setFocus() {\n    setTimeout(() => {\n      this.inputInnerRef && this.inputInnerRef.focus();\n    }, 10);\n  }\n\n  // react-click-outside callback\n  handleClickOutside(event){\n    if (event.target.tagName === 'HTML' || event.target.tagName === 'DIV') {\n      if (this.state.isOpened) {\n        this.closeOptions()\n      }\n    }\n  }\n\n  resetField() {\n    const { multi } = this.props;\n\n    let values = [];\n    if (multi) {\n      values = Array.from(this.state.values);\n      values.pop();\n    }\n\n    this.setState({\n      values: new Set(values),\n      searchTerm: null,\n      focusedIndex: 0,\n      options: this.props.options,\n    }, () => {\n      this.closeOptions()\n      this.inputInnerRef.value = ''\n      this.props.onInputClear()\n    })\n  }\n\n  onClearValue = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.resetField();\n  }\n\n  onSelectValue = (newValue, event) => {\n    const { values } = this.state;\n\n    if (!values.has(newValue)) {\n\n      values.add(newValue);\n\n      this.setState({\n        values,\n        searchTerm: null,\n        focusedIndex: 0\n      }, () => {\n        this.inputInnerRef.value = ''\n        this.props.onChange(newValue);\n      })\n    }\n    this.closeOptions()\n    this.props.onValueClick(newValue, event);\n  }\n\n  onSelectFocused = () => {\n    this.setState({\n      isFocused: true\n    })\n    this.openOptions();\n    this.setFocus();\n  }\n\n  getOptions() {\n    const { values } = this.state;\n    return this.props.options.filter((opt) => {\n      const label = opt.label.toLowerCase().trim()\n      if (values.has(label)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  onSearching = (event) => {\n    const { focusedIndex, options, isOpened } = this.state;\n\n    const typing = () => {\n      const filteredOptions = this.getOptions().filter((opt) => {\n        const label = opt.label.toLowerCase().trim()\n        const term = this.inputInnerRef.value.toLowerCase().trim()\n        return label.indexOf(term) !== -1\n      });\n\n      this.setState({\n        searchTerm: this.inputInnerRef.value,\n        searchWidth,\n        options: filteredOptions,\n        isOpened: true,\n        focusedIndex: 0\n      })\n\n      let searchWidth = SEARCH_INPUT_MIN_SIZE;\n      if (this.searchSizeRef) {\n        const width = this.searchSizeRef.getBoundingClientRect().width;\n        searchWidth = width > SEARCH_INPUT_MIN_SIZE ? width : SEARCH_INPUT_MIN_SIZE;\n      }\n\n      setTimeout(() => {\n        this.setState({ searchWidth })\n      });\n    }\n\n    const lastIndex = (options.length - 1)\n    switch (event.keyCode) {\n      case KEY_BACKSPACE: // backspace\n        if (!this.inputInnerRef.value) {\n          this.resetField()\n          break;\n        }\n        setTimeout(typing, 1);\n        break;\n      case KEY_UP:\n        this.setState({\n          focusedIndex: (focusedIndex <= 0 ? lastIndex : (focusedIndex - 1))\n        })\n        break;\n      case KEY_DOWN:\n        if (!isOpened) {\n          this.openOptions();\n          break;\n        }\n        this.setState({\n          focusedIndex: (focusedIndex >= lastIndex ? 0 : (focusedIndex + 1))\n        })\n        break;\n      case KEY_ENTER:\n        if (!options.length) break;\n        const newValue = options[focusedIndex].value\n        this.onSelectValue(newValue, event)\n        break;\n      case KEY_ESC:\n        this.closeOptions()\n        break;\n      default:\n        setTimeout(typing, 1);\n    }\n  }\n\n  renderSelectMultiValueWrapper() {\n    const { multi, placeholder, searchable, classes, valueRenderer } = this.props;\n    const { values, isOpened, isSelected, searchTerm, searchWidth } = this.state;\n\n    const SelectValueComp = multi ? SelectMultiValue : SelectValue;\n    const SelectWrapperComp = multi ? SelectMultiValueWrapper : SelectValueWrapper;\n\n    let content = '';\n\n    if (values.size) {\n      content = Array.from(values).map((value, key) => (\n        <SelectValueComp key={key} className={classes.selectValue} data-select-value data-multi-value={multi}>\n          {valueRenderer({ value, label: this.optionsMap[value].label }, classes.selectValueLabel)}\n        </SelectValueComp>\n      ));\n    }\n\n    if (!values.size && !searchTerm) {\n      content = (\n        <SelectPlaceholder\n          className={classes.selectPlaceholder}\n          data-select-placeholder>{placeholder}</SelectPlaceholder>\n      )\n    }\n\n    if (!searchable) {\n      return (\n        <SelectWrapperComp\n          for={this.state['input-field-id']}\n          className={classes.selectMultiValueWrapper}\n          data-select-multi-value-wrapper={multi}>\n          {content}\n        </SelectWrapperComp>\n      );\n    }\n\n    return (\n      <SelectWrapperComp\n        for={this.state['input-field-id']}\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper={multi}>\n        {content}\n        <SelectInput data-select-input className={classes.selectInput}>\n          <SelectInputField\n            style={{width: `${searchWidth}px`}}\n            id={this.state['input-field-id']}\n            className={classes.selectInputField}\n            data-select-input-search\n            onKeyDown={this.onSearching}\n            innerRef={(n) => this.inputInnerRef = n}\n            aria-label={placeholder}\n            aria-expanded={isOpened}\n            aria-owns={this.state['aria-owns']}\n            role=\"combobox\" type=\"text\" />\n        </SelectInput>\n        <SelectInputFieldSize\n          data-select-input-size\n          innerRef={(n) => this.searchSizeRef = n}>{searchTerm}</SelectInputFieldSize>\n      </SelectWrapperComp>\n    );\n  }\n\n  renderSelectMenuOuter() {\n    const { onOpen, classes, noResultsText, optionRenderer } = this.props;\n    const { values, isOpened, focusedIndex, options } = this.state;\n\n    if (!isOpened) {\n      return (\n        <div aria-hidden=\"true\" id={['aria-owns']} role=\"listbox\">\n          <div role=\"option\" tabIndex=\"-1\" />\n        </div>\n      );\n    }\n\n    onOpen()\n\n    let selectOptions = <SelectNoResults>{noResultsText}</SelectNoResults>;\n\n    if (options.length > 0) {\n      selectOptions = options.map((opt, i) => {\n        const isSelected = values === opt.value;\n        const isFocused = focusedIndex === i;\n        return optionRenderer(Object.assign({\n          key: i,\n          isSelected,\n          id: this.state['aria-owns'],\n          className: classes.selectOption,\n          isFocused: focusedIndex === i,\n          tabIndex: values === opt.value ? '0' : '-1',\n          onMouseDown: (e) => this.onSelectValue(opt.value, e)\n        }, opt), i);\n      });\n    }\n    return (\n      <SelectMenuOuter\n        className={classes.selectMenuOuter}\n        data-select-menu-outer>\n        <SelectMenu\n          role=\"listbox\"\n          className={classes.selectMenu} data-select-menu>\n          {selectOptions}\n        </SelectMenu>\n      </SelectMenuOuter>\n    )\n  }\n\n  renderSelectClearZone() {\n    const { clearable, classes } = this.props;\n\n    if (!clearable) return;\n\n    return (\n      <SelectClearZone\n        className={classes.selectClearZone}\n        data-select-clear-zone onMouseDown={this.onClearValue}>\n        <SelectClear\n          className={classes.selectClear} data-select-clear>x</SelectClear>\n      </SelectClearZone>\n    );\n  }\n\n  componentDidMount() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  componentDidUpdate() {\n    this.props.generatedClassName(this.selectNode.state.generatedClassName);\n  }\n\n  render () {\n    const { name, disabled, className, classes } = this.props;\n    const { value, isSelected, isOpened } = this.state;\n    return (\n      <Select data-select className={className}\n        ref={(node) => this.selectNode = node} innerRef={(node) => this.selectInnerRef = node}>\n        <input type=\"hidden\" name={name} value={stringifyValue(value)} disabled={disabled} />\n        <SelectControl\n          isOpened={isOpened}\n          aria-haspopup={isOpened}\n          className={classes.selectControl}\n          data-select-control onMouseDown={this.onSelectFocused}>\n          {this.renderSelectMultiValueWrapper()}\n          {this.renderSelectClearZone()}\n          <SelectArrowZone\n            className={classes.selectArrowZone} data-select-arrow-zone>\n            <SelectArrow isOpened={isOpened} className={classes.selectArrow} data-select-arrow />\n          </SelectArrowZone>\n        </SelectControl>\n        {this.renderSelectMenuOuter()}\n      </Select>\n    )\n  }\n}\n\nWrapperSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onChange: PropTypes.func,\n  onValueClick: PropTypes.func,\n  onInputClear: PropTypes.func,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  noResultsText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  generatedClassName: PropTypes.func\n}\n\nWrapperSelect.defaultProps = {\n  onClose: () => {},\n  onOpen: () => {},\n  onChange: () => {},\n  onValueClick: () => {},\n  onInputClear: () => {},\n  clearable: false,\n  searchable: true,\n  multi: true,\n  options: [],\n  placeholder: 'Select...',\n  noResultsText: 'No results found',\n  classes: {\n    selectArrow: '',\n    selectArrowZone: '',\n    selectClear: '',\n    selectClearZone: '',\n    selectControl: '',\n    selectInput: '',\n    selectInputField: '',\n    selectMenu: '',\n    selectMenuOuter: '',\n    selectMultiValueWrapper: '',\n    selectOption: '',\n    selectPlaceholder: '',\n    selectValue: '',\n    selectValueLabel: ''\n  },\n  valueRenderer: ValueRenderer,\n  optionRenderer: OptionRenderer,\n  generatedClassName: () => {}\n}\n\nexport default enhanceWithClickOutside(WrapperSelect)\n"]}